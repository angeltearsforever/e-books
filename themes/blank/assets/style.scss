@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap');

$tablet: 500px;
$white: #fff;
$slimegreen: #64e673;
$content-padding: 5vw;
$desktop-content-padding: 13vw;

html, body {
  background-color: #111;
  margin: 0 auto;
  padding: 30px 50px;
}
.controls {
  display: flex;
  justify-content: flex-end;
}
.button {
  cursor: pointer;
  margin: 5px;
  width: 30px;
  height: 30px;
  padding: 0;
  border-radius: 50px;
  background-color: $slimegreen;
  color: black;
  font-weight: 600;
  font-size: 30px;
  line-height: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  border: none;
  &:focus {outline: 0;}
  &:first-child {
    span {
      padding-bottom: 5px;
    }
  }
  span {
    padding-bottom: 4px;
  }
}

#flipbook{
  clear: both;
  width:1200px;
  height:632px;
  margin: 10px;
}
#flipbook .page{
  width:600;
  max-width:600;
  height:632px;
}
.image-wrapper {
  width: 100%;
  height:100%;
}
.cover {
  max-width: 100%;
  width: 600px;
  height: 632px;
  img {
    object-fit: cover;
    object-position: center;
    height: 100%;
    overflow: hidden;
  }
}
.credits {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}
.qzine-page {
  background-color: $slimegreen;
  width: 600px;
  height: 632px;
    h1, h2, h3, h4, h5, h6, p {
      font-family: 'Open Sans';
      color: $white;
      line-height: 1.4em;
      text-align: center;
      letter-spacing: .05rem;
    }
    h1 {
      font-size: 36px;
    }
    p {
      font-size: 18px;
      margin: 0;
      color: black;
      @media screen and (max-width: $tablet) {
        font-size: 16px;
      }
    }
  }

  .dedication {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }
  .video-caption {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    p {
      padding: 50px;
    }
  }
  .video-embed {
    background-color: black;
    width: 600px;
    height: 632px;
    overflow:hidden;
    iframe {
      transform: translate(-32%, -24%);
      overflow:hidden;
      object-position: center;
      width: calc(195vw - (#{$content-padding} * 2));
      height: calc(119vw - (#{$content-padding} * 2 * .61));
      @media screen and (min-width: 1028px) {
        width: calc(205vw - (#{$desktop-content-padding} * 2));
        height: calc(125vw - (#{$desktop-content-padding} * 2 * .61));
      }
    }
  }
  .images-with-text {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 20px;
    img {
      padding-bottom: 20px;
    }
    & > * {
      display: flex;
      flex-wrap: wrap;
      & > p {
        flex: 1 1 100%;
        display: flex;
        justify-content: stretch;
        align-items: stretch;
        text-align: center;
      }
    }
    img {
      width: 100%;
      height: 100%;
    }
  }
  
  //Butterfly
  .butterfly:first-child {
    --random-x: 100px; 
    --random-y: 200px; 
  }
  
  .butterfly:last-child {
    --random-x: 200px; 
    --random-y: 400px; 
  }
  
  
  .butterfly-wrapper {
    position: absolute;
    width: 100vw;
    height: 200vh;
  }
  
  .canvas {
    position: fixed;
    width: 100vw;
    height: 100vh;
    margin: 0 auto;
  }
  
  .butterfly-body {
    width: 4px;
    height: 25px;
    border-radius: 10px;
    background-color:rgba(255, 255, 255, 0.5);
    
    &:before {
      position: absolute;
      top: -5px;
      left: -1px;
      width: 1px;
      height: 6px;
      background-color:rgba(255, 255, 255, 0.5);
      transform: rotate(-25deg);
      content: '';
    }
    
      &:after {
      position: absolute;
      top: -5px;
      left: 4px;
      width: 1px;
      height: 6px;
      background-color:rgba(255, 255, 255, 0.5);
      transform: rotate(25deg);
      content: '';
    }
  }
  
  .butterfly {
    position: absolute;
    top: 0px;
    left: 0px;
    transform: translate(var(--random-x), var(--random-y));
    transition: transform 5s linear;
  }
  
  .butterfly-wing-1 {
    transform: rotateY(60deg);
    animation: Wing1 1s infinite;
    
    &:before {
      position: absolute;
      top: -9px;
      left: 5px;
      display: block;
      width: 30px;
      height: 20px;
      transform: rotateX(0deg);
      border-radius: 20px 5px;
      background-color:rgba(255, 255, 255, 0.5);
      content: '';
    }
    
    &:after {
      position: absolute;
      top: 13px;
      left: 5px;
      display: block;
      width: 30px;
      height: 20px;
      transform: rotateX(-170deg);
      border-radius: 20px 5px;
      background-color:rgba(255, 255, 255, 0.5);
      content: '';
    }
  }
  
  .butterfly-wing-2 {
    position: relative;
    top: -1px;
    transform: rotate(180deg) rotateY(60deg);
    animation: Wing2 1s infinite;
    
      &:before {
      position: absolute;
      top: -9px;
      left: 5px;
      display: block;
      width: 30px;
      height: 20px;
      transform: rotateX(0deg);
      border-radius: 20px 5px;
      background-color: rgba(255, 255, 255, 0.5);
      content: '';
    }
    
    &:after {
      position: absolute;
      top: 13px;
      left: 5px;
      display: block;
      width: 30px;
      height: 20px;
      transform: rotateX(-170deg);
      border-radius: 20px 5px;
      background-color:rgba(255, 255, 255, 0.5);
      content: '';
    }
  }
  
  @keyframes Wing1 {
    0% {
      transform: rotateY(60deg);
    }
    50% {
      transform: rotateY(0deg);
    }
    100% {
      transform: rotateY(60deg);
    }
  }
  
  @keyframes Wing2 {
    0% {
      transform: rotate(180deg) rotateY(60deg);
    }
    50% {
      transform: rotate(180deg) rotateY(0deg);
    }
    100% {
      transform: rotate(180deg) rotateY(60deg);
    }
  }
  
  @keyframes Body {
    0% {
      transform: translate(random(200), random(200));
    }
    20% {
      transform: translate(random(200), random(200));
    }
    40% {
      transform: translate(random(200), random(200));
    }
    60% {
      transform: translate(random(200), random(200));
    }
    80% {
      transform: translate(random(200), random(200));
    }
    100% {
      transform: translate(random(200), random(200));
    }
  }